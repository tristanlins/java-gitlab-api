buildscript {
    tasks.withType(JavaCompile) {
        options.encoding = "UTF-8"
    }
}

plugins {
    id "java"
    id "maven"
    id "idea"
    id "eclipse"
}

sourceCompatibility = 1.8
targetCompatibility = 1.8

group = "org.gitlab"
version = "4.0.1-SNAPSHOT"

repositories {
    mavenLocal()
    mavenCentral()
}

dependencies {
    compile(group: "org.slf4j",                         name: "slf4j-api",                  version: "1.8.0-beta2")
    compile(group: "commons-io",                        name: "commons-io",                 version: "2.4")
    compile(group: "com.fasterxml.jackson.core",        name: "jackson-databind",           version: "2.5.+")
    compile(group: "com.fasterxml.jackson.datatype",    name: "jackson-datatype-jsr310",    version: "2.5.1")
    testCompile(group: "org.apache.logging.log4j",      name: "log4j-api",                  version: "2.11.0")
    testCompile(group: "org.apache.logging.log4j",      name: "log4j-slf4j-impl",           version: "2.11.0")
    testCompile(group: "org.hamcrest",                  name: "hamcrest-all",               version: "1.3")
    testCompile(group: "org.mockito",                   name: "mockito-core",               version: "2.18.3")
    testCompile(group: "org.junit.jupiter",             name: "junit-jupiter-api",          version: "5.2.0")
    testCompile(group: "junit",                         name: "junit",                      version: "4.12")
    testRuntime(group: "org.junit.jupiter",             name: "junit-jupiter-engine",       version: "5.2.0")
    testRuntime(group: "org.junit.vintage",             name: "junit-vintage-engine",       version: "5.2.0")
}

jar {
    manifest { attributes "Gradle-Version": gradle.gradleVersion }
    from "LICENSE"
    from "NOTICE"
}

install {
    repositories.mavenInstaller { pom.artifactId = "java-gitlab-api" }
}

task sourcesJar(type: Jar, dependsOn:classes) {
    classifier = "sources"
    from sourceSets.main.allSource
    from "LICENSE"
    from "NOTICE"
}

artifacts { archives sourcesJar }

test {
    useJUnitPlatform {
        includeEngines 'junit-jupiter'
        includeEngines 'junit-vintage'
    }
}